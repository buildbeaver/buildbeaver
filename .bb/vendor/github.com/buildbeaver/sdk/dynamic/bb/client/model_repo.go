/*
BuildBeaver Dynamic Build API - OpenAPI 3.0

This is the BuildBeaver Dynamic Build API.

API version: 0.3.00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the Repo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Repo{}

// Repo struct for Repo
type Repo struct {
	// A link to the Repo resource on the BuildBeaver server.
	Url string `json:"url"`
	Id string `json:"id"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	Etag string `json:"etag"`
	// Name of the repo.
	Name string `json:"name"`
	// A description of the repo, taken from the Source Control Management system (e.g. GitHub).
	Description string `json:"description"`
	// The ID of the Legal Entity (person or company) that owns this repo.
	LegalEntityId string `json:"legal_entity_id"`
	// The URL of this repo on the Source Control Management system (e.g. GitHub) for SSH access to the repo.
	SshUrl string `json:"ssh_url"`
	// The URL of this repo on the Source Control Management system (e.g. GitHub) for HTTP access to the repo.
	HttpUrl string `json:"http_url"`
	// A link (URL) to the Repo on the Web, for users to browse to.
	Link string `json:"link"`
	// The name of the default branch on this repo (typically 'main' or 'master')
	DefaultBranch string `json:"default_branch"`
	// True if this is a private repo, false if it is public.
	Private bool `json:"private"`
	// True if builds are enabled for this repo.
	Enabled bool `json:"enabled"`
	// The ID of the secret containing the SSH key to use to check out code from the repo.
	SshKeySecretId *string `json:"ssh_key_secret_id,omitempty"`
	ExternalId *ExternalResourceID `json:"external_id,omitempty"`
	// Extra information relating to the repo in the Source Control Management system (e.g. GitHub). The exact information stored here will depend on which SCM contains the repo.
	ExternalMetadata string `json:"external_metadata"`
	// URL to fetch a list of builds for this repo.
	BuildsUrl string `json:"builds_url"`
	// URL to search for specific builds for this repo.
	BuildSearchUrl string `json:"build_search_url"`
	// URL to fetch secrets for this repo (subject to access control).
	SecretsUrl string `json:"secrets_url"`
	AdditionalProperties map[string]interface{}
}

type _Repo Repo

// NewRepo instantiates a new Repo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepo(url string, id string, createdAt time.Time, updatedAt time.Time, etag string, name string, description string, legalEntityId string, sshUrl string, httpUrl string, link string, defaultBranch string, private bool, enabled bool, externalMetadata string, buildsUrl string, buildSearchUrl string, secretsUrl string) *Repo {
	this := Repo{}
	this.Url = url
	this.Id = id
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Etag = etag
	this.Name = name
	this.Description = description
	this.LegalEntityId = legalEntityId
	this.SshUrl = sshUrl
	this.HttpUrl = httpUrl
	this.Link = link
	this.DefaultBranch = defaultBranch
	this.Private = private
	this.Enabled = enabled
	this.ExternalMetadata = externalMetadata
	this.BuildsUrl = buildsUrl
	this.BuildSearchUrl = buildSearchUrl
	this.SecretsUrl = secretsUrl
	return &this
}

// NewRepoWithDefaults instantiates a new Repo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepoWithDefaults() *Repo {
	this := Repo{}
	return &this
}

// GetUrl returns the Url field value
func (o *Repo) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Repo) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Repo) SetUrl(v string) {
	o.Url = v
}

// GetId returns the Id field value
func (o *Repo) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Repo) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Repo) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Repo) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Repo) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Repo) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Repo) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Repo) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Repo) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *Repo) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Repo) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *Repo) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *Repo) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetEtag returns the Etag field value
func (o *Repo) GetEtag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Etag
}

// GetEtagOk returns a tuple with the Etag field value
// and a boolean to check if the value has been set.
func (o *Repo) GetEtagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Etag, true
}

// SetEtag sets field value
func (o *Repo) SetEtag(v string) {
	o.Etag = v
}

// GetName returns the Name field value
func (o *Repo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Repo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Repo) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *Repo) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Repo) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Repo) SetDescription(v string) {
	o.Description = v
}

// GetLegalEntityId returns the LegalEntityId field value
func (o *Repo) GetLegalEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LegalEntityId
}

// GetLegalEntityIdOk returns a tuple with the LegalEntityId field value
// and a boolean to check if the value has been set.
func (o *Repo) GetLegalEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LegalEntityId, true
}

// SetLegalEntityId sets field value
func (o *Repo) SetLegalEntityId(v string) {
	o.LegalEntityId = v
}

// GetSshUrl returns the SshUrl field value
func (o *Repo) GetSshUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SshUrl
}

// GetSshUrlOk returns a tuple with the SshUrl field value
// and a boolean to check if the value has been set.
func (o *Repo) GetSshUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshUrl, true
}

// SetSshUrl sets field value
func (o *Repo) SetSshUrl(v string) {
	o.SshUrl = v
}

// GetHttpUrl returns the HttpUrl field value
func (o *Repo) GetHttpUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HttpUrl
}

// GetHttpUrlOk returns a tuple with the HttpUrl field value
// and a boolean to check if the value has been set.
func (o *Repo) GetHttpUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HttpUrl, true
}

// SetHttpUrl sets field value
func (o *Repo) SetHttpUrl(v string) {
	o.HttpUrl = v
}

// GetLink returns the Link field value
func (o *Repo) GetLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Link
}

// GetLinkOk returns a tuple with the Link field value
// and a boolean to check if the value has been set.
func (o *Repo) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Link, true
}

// SetLink sets field value
func (o *Repo) SetLink(v string) {
	o.Link = v
}

// GetDefaultBranch returns the DefaultBranch field value
func (o *Repo) GetDefaultBranch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultBranch
}

// GetDefaultBranchOk returns a tuple with the DefaultBranch field value
// and a boolean to check if the value has been set.
func (o *Repo) GetDefaultBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultBranch, true
}

// SetDefaultBranch sets field value
func (o *Repo) SetDefaultBranch(v string) {
	o.DefaultBranch = v
}

// GetPrivate returns the Private field value
func (o *Repo) GetPrivate() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Private
}

// GetPrivateOk returns a tuple with the Private field value
// and a boolean to check if the value has been set.
func (o *Repo) GetPrivateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Private, true
}

// SetPrivate sets field value
func (o *Repo) SetPrivate(v bool) {
	o.Private = v
}

// GetEnabled returns the Enabled field value
func (o *Repo) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *Repo) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *Repo) SetEnabled(v bool) {
	o.Enabled = v
}

// GetSshKeySecretId returns the SshKeySecretId field value if set, zero value otherwise.
func (o *Repo) GetSshKeySecretId() string {
	if o == nil || IsNil(o.SshKeySecretId) {
		var ret string
		return ret
	}
	return *o.SshKeySecretId
}

// GetSshKeySecretIdOk returns a tuple with the SshKeySecretId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Repo) GetSshKeySecretIdOk() (*string, bool) {
	if o == nil || IsNil(o.SshKeySecretId) {
		return nil, false
	}
	return o.SshKeySecretId, true
}

// HasSshKeySecretId returns a boolean if a field has been set.
func (o *Repo) HasSshKeySecretId() bool {
	if o != nil && !IsNil(o.SshKeySecretId) {
		return true
	}

	return false
}

// SetSshKeySecretId gets a reference to the given string and assigns it to the SshKeySecretId field.
func (o *Repo) SetSshKeySecretId(v string) {
	o.SshKeySecretId = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *Repo) GetExternalId() ExternalResourceID {
	if o == nil || IsNil(o.ExternalId) {
		var ret ExternalResourceID
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Repo) GetExternalIdOk() (*ExternalResourceID, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *Repo) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given ExternalResourceID and assigns it to the ExternalId field.
func (o *Repo) SetExternalId(v ExternalResourceID) {
	o.ExternalId = &v
}

// GetExternalMetadata returns the ExternalMetadata field value
func (o *Repo) GetExternalMetadata() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalMetadata
}

// GetExternalMetadataOk returns a tuple with the ExternalMetadata field value
// and a boolean to check if the value has been set.
func (o *Repo) GetExternalMetadataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalMetadata, true
}

// SetExternalMetadata sets field value
func (o *Repo) SetExternalMetadata(v string) {
	o.ExternalMetadata = v
}

// GetBuildsUrl returns the BuildsUrl field value
func (o *Repo) GetBuildsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BuildsUrl
}

// GetBuildsUrlOk returns a tuple with the BuildsUrl field value
// and a boolean to check if the value has been set.
func (o *Repo) GetBuildsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuildsUrl, true
}

// SetBuildsUrl sets field value
func (o *Repo) SetBuildsUrl(v string) {
	o.BuildsUrl = v
}

// GetBuildSearchUrl returns the BuildSearchUrl field value
func (o *Repo) GetBuildSearchUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BuildSearchUrl
}

// GetBuildSearchUrlOk returns a tuple with the BuildSearchUrl field value
// and a boolean to check if the value has been set.
func (o *Repo) GetBuildSearchUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuildSearchUrl, true
}

// SetBuildSearchUrl sets field value
func (o *Repo) SetBuildSearchUrl(v string) {
	o.BuildSearchUrl = v
}

// GetSecretsUrl returns the SecretsUrl field value
func (o *Repo) GetSecretsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretsUrl
}

// GetSecretsUrlOk returns a tuple with the SecretsUrl field value
// and a boolean to check if the value has been set.
func (o *Repo) GetSecretsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretsUrl, true
}

// SetSecretsUrl sets field value
func (o *Repo) SetSecretsUrl(v string) {
	o.SecretsUrl = v
}

func (o Repo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Repo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	toSerialize["etag"] = o.Etag
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["legal_entity_id"] = o.LegalEntityId
	toSerialize["ssh_url"] = o.SshUrl
	toSerialize["http_url"] = o.HttpUrl
	toSerialize["link"] = o.Link
	toSerialize["default_branch"] = o.DefaultBranch
	toSerialize["private"] = o.Private
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.SshKeySecretId) {
		toSerialize["ssh_key_secret_id"] = o.SshKeySecretId
	}
	if !IsNil(o.ExternalId) {
		toSerialize["external_id"] = o.ExternalId
	}
	toSerialize["external_metadata"] = o.ExternalMetadata
	toSerialize["builds_url"] = o.BuildsUrl
	toSerialize["build_search_url"] = o.BuildSearchUrl
	toSerialize["secrets_url"] = o.SecretsUrl

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Repo) UnmarshalJSON(bytes []byte) (err error) {
	varRepo := _Repo{}

	if err = json.Unmarshal(bytes, &varRepo); err == nil {
		*o = Repo(varRepo)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "url")
		delete(additionalProperties, "id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "deleted_at")
		delete(additionalProperties, "etag")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "legal_entity_id")
		delete(additionalProperties, "ssh_url")
		delete(additionalProperties, "http_url")
		delete(additionalProperties, "link")
		delete(additionalProperties, "default_branch")
		delete(additionalProperties, "private")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "ssh_key_secret_id")
		delete(additionalProperties, "external_id")
		delete(additionalProperties, "external_metadata")
		delete(additionalProperties, "builds_url")
		delete(additionalProperties, "build_search_url")
		delete(additionalProperties, "secrets_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRepo struct {
	value *Repo
	isSet bool
}

func (v NullableRepo) Get() *Repo {
	return v.value
}

func (v *NullableRepo) Set(val *Repo) {
	v.value = val
	v.isSet = true
}

func (v NullableRepo) IsSet() bool {
	return v.isSet
}

func (v *NullableRepo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepo(val *Repo) *NullableRepo {
	return &NullableRepo{value: val, isSet: true}
}

func (v NullableRepo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


