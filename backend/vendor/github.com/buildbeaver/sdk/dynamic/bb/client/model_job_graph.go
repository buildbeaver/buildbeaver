/*
BuildBeaver Dynamic Build API - OpenAPI 3.0

This is the BuildBeaver Dynamic Build API.

API version: 0.3.00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the JobGraph type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobGraph{}

// JobGraph struct for JobGraph
type JobGraph struct {
	Job Job `json:"job"`
	// The set of steps within the job
	Steps []Step `json:"steps"`
	AdditionalProperties map[string]interface{}
}

type _JobGraph JobGraph

// NewJobGraph instantiates a new JobGraph object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobGraph(job Job, steps []Step) *JobGraph {
	this := JobGraph{}
	this.Job = job
	this.Steps = steps
	return &this
}

// NewJobGraphWithDefaults instantiates a new JobGraph object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobGraphWithDefaults() *JobGraph {
	this := JobGraph{}
	return &this
}

// GetJob returns the Job field value
func (o *JobGraph) GetJob() Job {
	if o == nil {
		var ret Job
		return ret
	}

	return o.Job
}

// GetJobOk returns a tuple with the Job field value
// and a boolean to check if the value has been set.
func (o *JobGraph) GetJobOk() (*Job, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Job, true
}

// SetJob sets field value
func (o *JobGraph) SetJob(v Job) {
	o.Job = v
}

// GetSteps returns the Steps field value
func (o *JobGraph) GetSteps() []Step {
	if o == nil {
		var ret []Step
		return ret
	}

	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value
// and a boolean to check if the value has been set.
func (o *JobGraph) GetStepsOk() ([]Step, bool) {
	if o == nil {
		return nil, false
	}
	return o.Steps, true
}

// SetSteps sets field value
func (o *JobGraph) SetSteps(v []Step) {
	o.Steps = v
}

func (o JobGraph) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobGraph) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["job"] = o.Job
	toSerialize["steps"] = o.Steps

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *JobGraph) UnmarshalJSON(bytes []byte) (err error) {
	varJobGraph := _JobGraph{}

	if err = json.Unmarshal(bytes, &varJobGraph); err == nil {
		*o = JobGraph(varJobGraph)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "job")
		delete(additionalProperties, "steps")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableJobGraph struct {
	value *JobGraph
	isSet bool
}

func (v NullableJobGraph) Get() *JobGraph {
	return v.value
}

func (v *NullableJobGraph) Set(val *JobGraph) {
	v.value = val
	v.isSet = true
}

func (v NullableJobGraph) IsSet() bool {
	return v.isSet
}

func (v *NullableJobGraph) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobGraph(val *JobGraph) *NullableJobGraph {
	return &NullableJobGraph{value: val, isSet: true}
}

func (v NullableJobGraph) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobGraph) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


